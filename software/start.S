# 

.text

.global crtStart
crtStart:
  j _start
  nop
  nop
  nop
  nop
  nop
  nop
  nop
  
.global  trap_entry
trap_entry:
  sw x1,  - 1*4(sp)
  sw x5,  - 2*4(sp)
  sw x6,  - 3*4(sp)
  sw x7,  - 4*4(sp)
  sw x10, - 5*4(sp)
  sw x11, - 6*4(sp)
  sw x12, - 7*4(sp)
  sw x13, - 8*4(sp)
  sw x14, - 9*4(sp)
  sw x15, -10*4(sp)
  sw x16, -11*4(sp)
  sw x17, -12*4(sp)
  sw x28, -13*4(sp)
  sw x29, -14*4(sp)
  sw x30, -15*4(sp)
  sw x31, -16*4(sp)
  addi sp,sp,-16*4
  call irqCallback
  lw x1 , 15*4(sp)
  lw x5,  14*4(sp)
  lw x6,  13*4(sp)
  lw x7,  12*4(sp)
  lw x10, 11*4(sp)
  lw x11, 10*4(sp)
  lw x12,  9*4(sp)
  lw x13,  8*4(sp)
  lw x14,  7*4(sp)
  lw x15,  6*4(sp)
  lw x16,  5*4(sp)
  lw x17,  4*4(sp)
  lw x28,  3*4(sp)
  lw x29,  2*4(sp)
  lw x30,  1*4(sp)
  lw x31,  0*4(sp)
  addi sp,sp,16*4
  mret

.global _start
.type _start, @function

#.equ    STACK_TOP, 0x200000       # 2MB total memory
#.equ    STACK_TOP, 0x200000       # 1MB total memory
.equ    STACK_TOP, 0x80020000       # 128KB total memory

_start:
    la  gp, __global_pointer$
    li  sp,STACK_TOP    # load stack pointer

# zero-init bss section
    la a0, _sbss
    la a1, _ebss
    bge a0, a1, end_init_bss
loop_init_bss:
    sw zero, 0(a0)
    addi a0, a0, 4
    blt a0, a1, loop_init_bss

end_init_bss:
    li a0, 0x880     //880 enable timer + external interrupts
    csrw mie,a0
    li a0, 0x1808     //1808 enable interrupts
    csrw mstatus,a0
    
    call main
    # tail exit
